{"version":3,"sources":["components/Navbar.js","components/ProductList.js","components/Products.js","Contentful.js","pages/Magazine.js","pages/Basket.js","pages/ProductItem.js","components/Error.js","data.js","reducers/reducer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","items","numberOfItems","this","staticData","forEach","el","isAdded","className","to","props","data","Component","connect","dispatch","ProductList","currentPage","id","filters","changeCurrentPage","numPage","setState","basketHandler","addToBasket","totalSize","length","slice","map","slug","key","gender","src","img","alt","type","price","brand","onClick","disabled","dataList","sizePerPage","firstPageText","lastPageText","showFirstLastPages","nextPageText","previousPageText","prevData","newData","every","newEl","i","Products","selected","selectedMin","selectedMax","min","max","brandHandler","e","brandVar","target","value","filter","console","log","minPrice","maxPrice","brandArr","brandData","push","Set","htmlFor","onChange","step","allowCross","handleOnChange","createClient","space","accessToken","Magazine","loading","mansMenu","womanMenu","mensMenuHandler","womanMenuHandler","handleClick","text","textContent","getFiterItems","itemMan","itemWoman","seeAllFunc","seeAllDispatch","Client","getEntries","content_type","then","response","setData","getData","catch","error","mensMenu","typeClothes","Basket","modal","quantityHandler","val","changeQuantiy","clearBasketHandler","clearBasket","total","quantity","action","method","name","defaultValue","required","placeholder","addedItems","removeItemFromBasket","ProductItem","description","url","location","pathname","replace","find","Error","obj","store","createStore","extendData","fields","file","content","initialPricesExtend","Math","selectedValue","random","loaded","initialPrices","removeData","removeUpdatedData","updatedState","priceFilteredData","quan","newDataCleared","staticUpdatedDataCleared","notMutableData","filterChanges","currentFilters","filterPredicateFactories","newFilteredData","Object","keys","filterKey","p","reduce","filteredData","predicate","prices","minMax","staticUpdatedData","applyMiddleware","logger","App","exact","path","component","from","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ea972da.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FaShoppingCart } from 'react-icons/fa';\r\nimport { NavLink  } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n class Navbar extends Component {\r\n    state = {\r\n        items:''\r\n    }\r\n    static getDerivedStateFromProps(props) {\r\n        // console.log(props.data)\r\n        const stateUpdate = {\r\n            items:props.data\r\n\r\n          }\r\n  \r\n          return stateUpdate;\r\n      }\r\n    render() {\r\n        let numberOfItems = '';\r\n        this.state.items.staticData.forEach(el=>{\r\n          return  el.isAdded === true ? numberOfItems++ : null\r\n        })\r\n        return (\r\n            <nav className=\"nav-menu\">\r\n   \r\n                  <NavLink  to='/'  className=\"nav-link\" >Shop </NavLink >\r\n                  <NavLink  to='/basket'  className=\"nav-link basket\" >Basket<FaShoppingCart/>{ numberOfItems < 1 ? null: <h6 className=\"items-in-basket\">  {numberOfItems} </h6>}</NavLink >\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(state=>({\r\n    data:state\r\n}), \r\n dispatch=>({\r\n    //  addToBasket:(id)=>{\r\n    //   dispatch({type:'ADD-TO-BASKET',id})\r\n    //  },\r\n\r\n })\r\n\r\n)(Navbar)","import React, { Component } from 'react';\r\nimport Pagination from \"react-pagination-js\";\r\nimport \"react-pagination-js/dist/styles.css\"; \r\nimport { NavLink  } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ProductList extends Component {\r\n    state = {\r\n        currentPage: 1,\r\n        data: [],\r\n        id:1,\r\n        filters: {}\r\n      };\r\n\r\n      static getDerivedStateFromProps(props, state) {\r\n        // console.log(props , state)\r\n        const prevData = state.data;\r\n        const newData = props.dataList;\r\n\r\n        if(newData.length === prevData.length &&  newData.every((newEl, i) => prevData[i].id === newEl.id)) {\r\n          return {\r\n            data: newData ? newData : []\r\n          };\r\n        }\r\n          \r\n        const stateUpdate = {\r\n          totalSize: newData ?newData.length : 0,\r\n          data: newData ? newData : [],\r\n          currentPage: 1,\r\n        }\r\n\r\n        return stateUpdate;\r\n      }\r\n    \r\n      changeCurrentPage = numPage => {\r\n        this.setState({ currentPage: numPage });\r\n      };\r\n    \r\n    basketHandler=(id)=>{\r\n        this.props.addToBasket(id)\r\n    }\r\n    \r\n      render() {\r\n        const { data, currentPage, totalSize } = this.state;\r\n        return (\r\n            <>\r\n          <div className=\"product-container\"> \r\n                {data.length >= 1?  data.slice(currentPage*12-12,currentPage*12).map(el=>{\r\n                      let slug = el.id\r\n                      \r\n                            return (\r\n                                <ul className=\"product-item\" key={el.id}>\r\n                                    <li>For {el.gender}</li>\r\n                                    <li><img src={\"https:\"+el.img} alt=\"clothes\" /></li> \r\n                                    <li>{el.type}</li>\r\n                                    <li>Price {el.price} $</li>\r\n                                    <li>Brand {el.brand}</li>\r\n                                    <li><button onClick={()=>this.basketHandler(el.id)} disabled={el.isAdded}>{el.isAdded?  ('Added to basket') : ('Add to basket') }</button></li>\r\n                                    <li><NavLink  to={`/item/${slug}`}  className=\"nav-link\" >More info ... </NavLink ></li>\r\n                                </ul>\r\n                            )\r\n                 }) : <h2>No match items , please change serching options</h2>}\r\n          </div>\r\n          <div className=\"paginator\">\r\n\r\n            {this.props.dataList.length > 12 ?  ( \r\n              <Pagination   currentPage={currentPage}\r\n              totalSize={totalSize} \r\n              sizePerPage={12} \r\n              changeCurrentPage={this.changeCurrentPage} \r\n              firstPageText=\"first\" \r\n              lastPageText=\"last\" \r\n              showFirstLastPages={true} \r\n              nextPageText=\"next\"\r\n              previousPageText=\"prev\"\r\n              />\r\n            ) : null}\r\n\r\n            </div>\r\n              </>\r\n        );\r\n      }\r\n}\r\n\r\nexport default connect(state=>({\r\n\r\n}), \r\n dispatch=>({\r\n     addToBasket:(id)=>{\r\n      dispatch({type:'ADD-TO-BASKET',id})\r\n     },\r\n\r\n })\r\n\r\n)(ProductList)\r\n\r\nProductList.propTypes = {\r\n  dataList: PropTypes.array\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProductList from './ProductList';\r\nimport  { Range } from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n class Products extends Component {\r\n    state ={\r\n        selected:true,\r\n        selectedMin: 0,\r\n        selectedMax: 0,\r\n        min: 0,\r\n        max: 0\r\n    }\r\n    \r\n    static getDerivedStateFromProps(props, state) { \r\n        const { minPrice, maxPrice } = props.data;\r\n        if(minPrice !== state.min || maxPrice !== state.max) {\r\n            return {\r\n                min: minPrice,\r\n                selectedMin: minPrice,\r\n                max: maxPrice,\r\n                selectedMax: maxPrice\r\n            }\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n    \r\n    brandHandler=(e)=>{\r\n\r\n        // console.log(e.target.value)\r\n        let brandVar = e.target.value;\r\n        this.props.filter({ brand: brandVar === 'All' ? null : brandVar })\r\n    }\r\n    handleOnChange(e){\r\n        console.log(e)\r\n        let minPrice = e[0];\r\n        let maxPrice = e[1];\r\n        this.setState({selectedMin: minPrice, selectedMax: maxPrice });\r\n        this.props.filter({price: {min: minPrice, max: maxPrice }})\r\n    }\r\n\r\n\r\n    render() {\r\n        let brandArr = []\r\n        this.props.data.brandData.forEach(el=>{\r\n            brandArr.push(el.brand)\r\n        })\r\n\r\n        brandArr=['All',...new Set(brandArr)];\r\n\r\n\r\n        const { minPrice , maxPrice } = this.props.data;\r\n        const { selectedMin, selectedMax } = this.state;\r\n        const { filters } = this.props.data;\r\n        return (\r\n            <div className=\"search-and-products-container\">\r\n                <div className=\"filter-table\">\r\n            <label htmlFor=\"filter-by-brand\">Choose your brand : </label>\r\n            <select value={ (filters && filters.brand) || 'All'}   onChange={(e)=>this.brandHandler(e)} id=\"filter-by-brand\">\r\n                {brandArr.map((el)=>{\r\n                    return <option value={el}  key={el}>{el}</option>\r\n                })}\r\n            </select>\r\n            <div className=\"price-range\">\r\n                <h3  className=\"range-title\">Min price : {this.state.selectedMin} $ </h3>\r\n                <h3  className=\"range-title\">Max price : {this.state.selectedMax} $</h3>\r\n             <Range min={minPrice}   max={maxPrice} value={[selectedMin, selectedMax]}  step={1} allowCross={false}  onChange={(e)=>this.handleOnChange(e)}/>\r\n            </div>\r\n            </div>\r\n            <div >\r\n                <ProductList  dataList={ this.props.data.data }/>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(state=>({\r\n    data:state\r\n}), \r\n   dispatch=>({\r\n    filter: (filters) => {\r\n        dispatch({ type: 'FILTER', filters })\r\n    }\r\n\r\n\r\n   })\r\n)(Products)\r\n\r\nProducts.propTypes = {\r\n    dataList: PropTypes.array,\r\n    data: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        minPrice:PropTypes.number,\r\n        maxPrice:PropTypes.number,\r\n        brandData:PropTypes.array,\r\n        staticData:PropTypes.array,\r\n        data:PropTypes.array,\r\n        selectedValue:PropTypes.string,\r\n      })\r\n  };\r\n","import {createClient} from 'contentful'\r\n\r\nexport default createClient({\r\n    space: \"04kqfsuq4bba\",\r\n    accessToken: \"GtTpbLun7F_nGUVitUA4JnPsFzEhxPPxZ8cqHdxRL7o\"\r\n})","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Products from '../components/Products';\r\nimport Client from '../Contentful';\r\n\r\n\r\n\r\n\r\n class Magazine extends Component {\r\n    state={\r\n        loading:true,\r\n        mansMenu:false,\r\n        womanMenu:false,\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n     \r\n        if (this.props.data.staticData.length === 0) {\r\n            Client.getEntries({\r\n                content_type: 'maxShop'\r\n            })\r\n            .then((response) =>{\r\n    \r\n               this.props.setData(response.items)\r\n               this.props.getData()\r\n    \r\n            },      \r\n            \r\n            this.setState((state, props) => ({\r\n                loading:false\r\n              }))\r\n     \r\n            )\r\n            .catch(console.error)\r\n        }\r\n\r\n\r\n    }\r\n    \r\n\r\n\r\n    mensMenuHandler=()=>{\r\n        this.setState(state => ({\r\n            mansMenu: !state.mansMenu\r\n          }));\r\n        \r\n    }\r\n    womanMenuHandler=()=>{\r\n        this.setState(state => ({\r\n            womanMenu: !state.womanMenu\r\n          }));\r\n    }\r\n\r\n\r\n    handleClick=(e,gender)=>{\r\n        let text = e.target.textContent\r\n        this.props.getFiterItems(gender,text)\r\n        if ( gender === 'man'){\r\n            this.setState(state => ({\r\n            itemMan: text,\r\n            itemWoman: ''\r\n          }));\r\n\r\n\r\n        } else {\r\n            this.setState(state => ({\r\n                itemWoman: text,\r\n                itemMan: ''\r\n              }));\r\n        }\r\n\r\n    }\r\n    seeAllFunc=()=>{\r\n        this.setState(state => ({\r\n            itemWoman: '',\r\n            itemMan: ''\r\n          }));\r\n          this.props.seeAllDispatch()\r\n    }\r\n\r\n    render() {\r\n\r\n        let mensMenu = []\r\n        this.props.data.staticData.forEach((el,i)=>{\r\n            if (el.gender=== 'man'  ) {\r\n                mensMenu.push(el.type)\r\n            }\r\n            \r\n        })\r\n        mensMenu=[...new Set(mensMenu)]\r\n\r\n        let womanMenu = []\r\n        this.props.data.staticData.forEach((el,i)=>{\r\n            if (el.gender=== 'woman'  ) {\r\n                 womanMenu.push(el.type)\r\n            }\r\n\r\n        })\r\n        womanMenu=[...new Set(womanMenu)]\r\n        \r\n        mensMenu =mensMenu.map(el=>{\r\n            return <h5 onClick={(e)=>this.handleClick(e,'man')} className={this.state.itemMan===el?\"menu-items-active\": \"menu-items\"} key={el}>{el}</h5>\r\n        })\r\n\r\n        womanMenu= womanMenu.map(el=>{\r\n            return <h5 onClick={(e)=>this.handleClick(e,'woman')} className={this.state.itemWoman===el?\"menu-items-active\": \"menu-items\"} key={el}>{el}</h5>\r\n        })\r\n\r\n        \r\n        return (\r\n                <>\r\n               {this.props.data.staticData.length === 0? (<h2 className=\"loading-title\">Loading items ...</h2>) : ( \r\n                <main className=\"magazine-main\">\r\n                <div className=\"filter-bar\">\r\n                <div className=\"menu-header\">\r\n                <h4 className=\"menu-title\" onClick={this.seeAllFunc}>See all</h4>\r\n                <h4 className=\"menu-title\" onClick={this.mensMenuHandler}>Man</h4>\r\n                {this.state.mansMenu?mensMenu: null}\r\n\r\n                </div>\r\n                <div className=\"menu-header\">\r\n                <h4 className=\"menu-title\" onClick={this.womanMenuHandler}>Woman</h4>\r\n                {this.state.womanMenu?womanMenu: null}\r\n\r\n                </div>\r\n                </div>\r\n                <div className=\"product-list\">\r\n                    <Products data={this.props.data.data}/>\r\n\r\n                </div>\r\n                </main>\r\n               )}\r\n               </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(state=>({\r\n    data:state\r\n}), \r\n   dispatch=>({\r\n       getFiterItems:(gender,typeClothes)=>{\r\n        dispatch({type:'FILTER', filters: { gender, type: typeClothes, price: null, brand: null}})\r\n       },\r\n       seeAllDispatch:()=>{\r\n        dispatch({type:'GET-DATA'})\r\n       },\r\n       setData:(data)=>{\r\n        dispatch({type:'SET-DATA',data})\r\n       },\r\n       getData:()=>{\r\n        dispatch({type:'GET-DATA'})\r\n       },\r\n   })\r\n\r\n)(Magazine)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Basket extends Component {\r\n    state = {\r\n        items:null,\r\n        modal:false\r\n    }\r\n    static getDerivedStateFromProps(props,state) {\r\n \r\n        let addedItems = [];\r\n        props.data.staticData.forEach(el=>{\r\n            return  el.isAdded === true ? addedItems.push({...el}) : null\r\n          })\r\n        const stateUpdate = {\r\n            items:addedItems,\r\n            id:props.data.id\r\n\r\n          }\r\n  \r\n          return stateUpdate;\r\n      }\r\n\r\n    quantityHandler=(e,key)=>{\r\n        let val = e.target.value\r\n          this.props.changeQuantiy(val,key)\r\n        }\r\n    \r\n    clearBasketHandler = ()=> {\r\n        this.props.clearBasket()\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n        let total = 0;\r\n        this.state.items.forEach(el=>{\r\n            return total= total + el.price*el.quantity\r\n        })\r\n         return (\r\n            <div className=\"basket\">\r\n                              <form action=\"https://formspree.io/mlejjgdr\" method=\"POST\">\r\n\r\n        {this.state.items ? this.state.items.map(el=>{\r\n                            let key = el.id\r\n                            return (\r\n      \r\n                                <ul className=\"basket-item\" key={key}>\r\n                                    <li>For {el.gender}</li>\r\n                                    <img src={\"https:\"+el.img} alt=\"clothes\" /> \r\n                                    <li>{el.type}</li>\r\n                                    <li>Price {el.price} $</li>\r\n                                    <li>Brand {el.brand}</li>\r\n                                    <li onClick={(e)=>this.quantityHandler(e,key)}>Quantity <button type=\"button\" value=\"+\">+</button>{el.quantity}<button type=\"button\" value=\"-\">-</button> </li>\r\n                                    <li><input className=\"order-info\" type=\"text\" name=\"order\" defaultValue={`${el.gender}+${el.type}+${el.price}+${el.brand}+${el.quantity}`}/></li>\r\n                                </ul>\r\n                            )\r\n                 }) : null  }\r\n                          <h2> you choose  {  this.state.items.length < 1 ? ('no one'):this.state.items.length } item(s){  this.state.items.length < 1 ? null : ` on price ${total} $`} </h2>\r\n        {  this.state.items.length < 1 ? null :  (\r\n        <div className=\"basket-buttons\">\r\n        <button type=\"button\" onClick={this.clearBasketHandler}>Clear a basket</button>   \r\n        <input type=\"text\" name=\"name\" required placeholder=\"Your name\"/>\r\n        <input type=\"tel\" id=\"phone\" name=\"phone\" required placeholder=\"Your phone number\"/>\r\n        <button type=\"submit\">Send order</button>  \r\n        </div>)}\r\n\r\n        </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(state=>({\r\n    data:state\r\n}), \r\n dispatch=>({\r\n     removeItemFromBasket:(id)=>{\r\n      dispatch({type:'REMOVE-FROM-BASKET',id})\r\n     },\r\n     changeQuantiy:(val,id)=>{\r\n        dispatch({type:'ITEM-QUANTITY',val,id})\r\n     },\r\n     clearBasket:()=>{\r\n        dispatch({type:'CLEAR-BASKET'})\r\n       },\r\n\r\n })\r\n\r\n)(Basket)","import React, { Component } from 'react';\r\nimport { NavLink  } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n class ProductItem extends Component {\r\n\r\n    state= {\r\n        data:''\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        //  console.log(props , state)\r\n        let url = props.location.pathname.replace('/item/', '');\r\n        let data = props.data.data;\r\n        data = data.find(el=>{\r\n           return el.id === url\r\n        })\r\n\r\n        return {data:data};\r\n      }\r\n\r\n    basketHandler=(id)=>{\r\n        this.props.addToBasket(id)\r\n    }\r\n    \r\n    render() {\r\n      \r\n        return (\r\n            <div className=\"product-page\">\r\n                <ul  key={this.state.data.id}>\r\n                <li>For {this.state.data.gender}</li>\r\n                <li><img src={\"https:\"+this.state.data.img} alt=\"clothes\"/></li>\r\n                <li>{this.state.data.type}</li>\r\n                <li>Price {this.state.data.price} $</li>\r\n                <li>Brand {this.state.data.brand}</li>\r\n                <li><p>{this.state.data.description}</p></li>\r\n                <li><button onClick={()=>this.basketHandler(this.state.data.id)} disabled={this.state.data.isAdded}>{this.state.data.isAdded?  ('Added to basket') : ('Add to basket') }</button></li>\r\n                </ul>\r\n                <NavLink  to='/'   className=\"nav-link\" >Back to shop </NavLink >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(state=>({\r\n    data:state\r\n}), \r\n   dispatch=>({\r\n    addToBasket:(id)=>{\r\n        dispatch({type:'ADD-TO-BASKET',id})\r\n       },\r\n   })\r\n)(ProductItem)\r\n","import React from 'react';\r\n \r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            Page not found\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Error;","\r\n\r\n\r\n let obj ={ \r\n     filters: {},\r\nstaticData:[],\r\ndata:[]\r\n\r\n}\r\n\r\nexport default obj\r\n\r\n\r\n\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport obj from '../data'\r\nimport logger from 'redux-logger';\r\n\r\n\r\n\r\n\r\nfunction maxReducer(state=obj, action) {\r\n    switch(action.type){\r\n        case 'SET-DATA':\r\n\r\n\r\n            let extendData = action.data.map(el=>{\r\n               return {...el.fields,img:el.fields.img.fields.file.url,description:el.fields.description.content[0].content[0].value}\r\n            })\r\n            console.log(extendData)\r\n\r\n            const initialPricesExtend = extendData.map(el => el.price);\r\n\r\n            return {\r\n                brandData:state.staticData,\r\n                minPrice: Math.min(...initialPricesExtend), \r\n                maxPrice: Math.max(...initialPricesExtend),\r\n                data:state.staticData,\r\n                selectedValue : 'All',\r\n                id:Math.random(),\r\n                staticData:extendData,\r\n                loaded:true\r\n            }\r\n        case 'GET-DATA':\r\n            const initialPrices = state.staticData.map(el => el.price);\r\n\r\n\r\n            return {\r\n                brandData:state.staticData,\r\n                minPrice: Math.min(...initialPrices), \r\n                maxPrice: Math.max(...initialPrices),\r\n                staticData: state.staticData,\r\n                data:state.staticData,\r\n                selectedValue : 'All',\r\n                id:Math.random(),\r\n                loaded:true\r\n       \r\n            };\r\n\r\n        case 'REMOVE-FROM-BASKET':\r\n            let removeData = state.data.map((el) => el.id !== action.id ? el : ({...el, isAdded: false}));\r\n            let removeUpdatedData = state.staticData.map((el) => el.id !== action.id ? el : ({...el, isAdded: false}));\r\n            let updatedState = {\r\n                ...state,\r\n                data: removeData,\r\n                staticData:removeUpdatedData,\r\n                priceFilteredData:removeData,\r\n            }\r\n            console.log(updatedState)\r\n            return updatedState\r\n        case 'ITEM-QUANTITY':\r\n            console.log(action.val , action.id)\r\n            let val = action.val;\r\n            if (val === \"+\") {\r\n                let removeData = state.data.map((el) =>{\r\n                if (el.id === action.id) {\r\n                    let quan = el.quantity;\r\n                    quan=quan+1;\r\n                    return {...el, quantity:quan}\r\n                }else {\r\n                    return {...el}\r\n                }});\r\n            \r\n                let removeUpdatedData = state.staticData.map((el) => {\r\n                    if (el.id === action.id) {\r\n                        let quan = el.quantity;\r\n                        quan=quan+1;\r\n                        return {...el, quantity:quan}\r\n                    } else {\r\n                        return {...el}\r\n                    } } );\r\n                let updatedState = {\r\n                    ...state,\r\n                    data: removeData,\r\n                    staticData:removeUpdatedData,\r\n                    priceFilteredData:removeData,\r\n                }\r\n                console.log(updatedState)\r\n                return updatedState\r\n\r\n            }\r\n            if (val === \"-\") {\r\n                let removeData = state.data.map((el) =>{\r\n                    if (el.id === action.id) {\r\n                        let quan = el.quantity;\r\n                        quan=quan-1;\r\n                       return quan === 0 ? {...el, isAdded:false,quantity:1}: {...el, quantity:quan}\r\n                    }else {\r\n                        return {...el}\r\n                    }});\r\n                \r\n                    let removeUpdatedData = state.staticData.map((el) => {\r\n                        if (el.id === action.id) {\r\n                            let quan = el.quantity;\r\n                            quan=quan-1;\r\n                           return quan === 0 ? {...el, isAdded:false,quantity:1}: {...el, quantity:quan}\r\n                        } else {\r\n                            return {...el}\r\n                        } } );\r\n                    let updatedState = {\r\n                        ...state,\r\n                        data: removeData,\r\n                        staticData:removeUpdatedData,\r\n                        priceFilteredData:removeData,\r\n                    }\r\n                    console.log(updatedState)\r\n                    return updatedState\r\n            }\r\n            return state\r\n            case 'CLEAR-BASKET':\r\n                let newDataCleared = state.data.map((el) => { return {...el,isAdded: false}});\r\n                let staticUpdatedDataCleared = state.staticData.map((el) =>{ return {...el,isAdded: false}});\r\n                let newStateCleared = {\r\n                    ...state,\r\n                    data: newDataCleared,\r\n                    notMutableData: state.staticData,\r\n                    staticData:staticUpdatedDataCleared,\r\n                    priceFilteredData:newDataCleared,\r\n                }\r\n    \r\n                return newStateCleared;\r\n            case 'FILTER':\r\n                 const filterChanges = action.filters;\r\n                 const currentFilters = state.filters;\r\n\r\n                 const filters = {\r\n                     ...currentFilters,\r\n                     ...filterChanges\r\n                 };\r\n\r\n                 // filters = { price: {min: 11, max: 22}, brand: \"Adidas\", gender: null } \r\n                 const filterPredicateFactories = {\r\n                     price: ({min, max}) => (el) => el.price >= min && el.price <= max,\r\n                     brand: (brand) => (el) => el.brand === brand,\r\n                     gender: (gender) => (el) => el.gender === gender,\r\n                     type: (type) => (el) => el.type === type\r\n                 }\r\n\r\n                \r\n                 const  brandData = state.staticData.filter(el=>\r\n                    (!filters.gender || el.gender === filters.gender) && (!filters.type || el.type === filters.type)     \r\n                 );//.filter(el => {if (el){return el}})\r\n\r\n                 console.log(brandData)\r\n\r\n                 const predicates = Object.keys(filters).map(filterKey => !filters[filterKey] ? null : filterPredicateFactories[filterKey](filters[filterKey]))\r\n                                        .filter(p => p);\r\n\r\n                 const newFilteredData = predicates.reduce((filteredData, predicate) => filteredData.filter(predicate), state.staticData);\r\n\r\n                 const prices = newFilteredData.map(el => el.price);\r\n                 const minMax = !filters.price ? {minPrice: Math.min(...prices), maxPrice: Math.max(...prices) } : {};\r\n\r\n                 return {\r\n                     ...state,\r\n                     ...minMax,\r\n                     data: newFilteredData,\r\n                     filters,\r\n                     brandData:brandData\r\n                 }\r\n            case 'ADD-TO-BASKET':\r\n            // console.log(action.id)\r\n            // console.log(state)\r\n\r\n            let newData = state.data.map((el) => el.id !== action.id ? el : ({...el, isAdded: true}));\r\n            let staticUpdatedData = state.staticData.map((el) => el.id !== action.id ? el : ({...el, isAdded: true}));\r\n            let newState = {\r\n                ...state,\r\n                data: newData,\r\n                notMutableData: state.staticData,\r\n                staticData:staticUpdatedData,\r\n                priceFilteredData:newData,\r\n            }\r\n\r\n            return newState;\r\n        default:\r\n            return state\r\n    }\r\n\r\n  }\r\n\r\n//   function reducer(state, action) {\r\n//       const newState = maxReducer(...arguments);\r\n//       return {\r\n//           ...newState,\r\n//           data: newState.data.map(el => ({...el, img: el.img.replace(/^\\//, \"\")}))\r\n//       };\r\n//   }\r\n  const store = createStore(maxReducer, applyMiddleware(logger));  //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n  \r\n\r\n  \r\n  store.dispatch({type:'GET-DATA'})\r\n \r\n  export default store\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Magazine from './pages/Magazine';\nimport Basket from './pages/Basket';\nimport ProductItem from './pages/ProductItem';\nimport {  Switch,  Route, Redirect } from \"react-router-dom\";\nimport Error from './components/Error';\nimport { Provider } from 'react-redux';\nimport store from './reducers/reducer'\n\n\n\nfunction App() {\n//    \n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n    <Navbar/>\n    <Switch>\n      \n    <Route exact path=\"/\" component={Magazine}  />\n    <Route exact path=\"/basket\" component={Basket}  />\n    <Route exact path=\"/item/:slug\" component={ProductItem}  />\n    <Redirect exact from=\"\" to=\"/\" />\n    <Route  component={Error}  />\n    \n    </Switch>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}